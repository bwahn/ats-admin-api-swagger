{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "yoda backend services",
    "description": "A APIs for managing backend services",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Eric Ahn"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "api.yoda.io",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/servers": {
      "get": {
        "description": "Returns all servers from the system that it has access to",
        "operationId": "findServers",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "server response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Server"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new server in the backend region.",
        "operationId": "addServer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "server",
            "in": "body",
            "description": "Server to add to the backend region",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "server response",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/servers/{id}": {
      "get": {
        "description": "Returns a user based on a single server ID if it want to access the server",
        "operationId": "findServerById",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of server to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "server response",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single server based on the ID supplied",
        "operationId": "deleteServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of server to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "server deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Server": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "ServerInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Server"
        },
        {
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
